{"ast":null,"code":"var _jsxFileName = \"D:\\\\PomodoroReact\\\\pomodoro\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Settings from \"./settings\";\nimport \"./App.css\";\nimport Timer from \"./components/Timer\";\nimport Controls from \"./components/Controls\";\nimport Footer from \"./components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const WORK_TIME = 25;\n  const SHORT_BREAK = 5;\n  const LONG_BREAK = 15;\n  const [minutes, setMinutes] = useState(WORK_TIME);\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [currentMode, setCurrentMode] = useState(\"work\");\n\n  // Tarefas\n  const [tasks, setTasks] = useState([]); // Estado para armazenar as tarefas\n  const [newTask, setNewTask] = useState(\"\"); // Estado para nova tarefa\n\n  // Função para adicionar nova tarefa\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      setTasks([...tasks, {\n        task: newTask,\n        completed: false\n      }]); // Adiciona a nova tarefa ao estado\n      setNewTask(\"\"); // Limpa o campo de nova tarefa\n    }\n  };\n\n  // Função para atualizar o valor da nova tarefa\n  const handleTaskChange = e => {\n    setNewTask(e.target.value);\n  };\n  useEffect(() => {\n    // Verifica se já existem tarefas no localStorage\n    const savedTasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    if (savedTasks) {\n      setTasks(savedTasks);\n    }\n  }, []);\n  useEffect(() => {\n    // Atualiza o localStorage sempre que as tarefas mudarem\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n  useEffect(() => {\n    if (minutes === 0 && seconds === 0) {\n      const audio = new Audio('/path/to/alarm-sound.mp3');\n      audio.play();\n    }\n  }, [minutes, seconds]);\n  useEffect(() => {\n    let interval;\n    if (isActive) {\n      interval = setInterval(() => {\n        if (seconds === 0) {\n          if (minutes === 0) {\n            switch (currentMode) {\n              case \"work\":\n                setCurrentMode(\"shortBreak\");\n                setMinutes(SHORT_BREAK);\n                break;\n              case \"shortBreak\":\n                setCurrentMode(\"work\");\n                setMinutes(WORK_TIME);\n                break;\n              case \"longBreak\":\n                setCurrentMode(\"work\");\n                setMinutes(WORK_TIME);\n                break;\n              default:\n                break;\n            }\n            setSeconds(0);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        } else {\n          setSeconds(seconds - 1);\n        }\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds, minutes, currentMode]);\n  const startStopTimer = () => setIsActive(!isActive);\n  const resetTimer = () => {\n    setIsActive(false);\n    setCurrentMode(\"work\");\n    setMinutes(WORK_TIME);\n    setSeconds(0);\n  };\n  const startShortBreak = () => {\n    setIsActive(false);\n    setCurrentMode(\"shortBreak\");\n    setMinutes(SHORT_BREAK);\n    setSeconds(0);\n    setIsActive(true);\n  };\n  const startLongBreak = () => {\n    setIsActive(false);\n    setCurrentMode(\"longBreak\");\n    setMinutes(LONG_BREAK);\n    setSeconds(0);\n    setIsActive(true);\n  };\n  const handleCompleteTask = index => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = !newTasks[index].completed;\n    setTasks(newTasks);\n  };\n  const handleRemoveTask = index => {\n    const newTasks = tasks.filter((task, taskIndex) => taskIndex !== index);\n    setTasks(newTasks);\n  };\n  const App = () => {\n    _s();\n    // Estado para controlar se o painel de configurações está aberto ou não\n    const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n\n    // Função para abrir e fechar o painel\n    const toggleSettings = () => {\n      setIsSettingsOpen(prev => !prev);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app ${isSettingsOpen ? \"settings-open\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bem-vindo ao seu aplicativo Pomodoro!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleSettings,\n        children: isSettingsOpen ? \"Fechar Configurações\" : \"Abrir Configurações\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), isSettingsOpen && /*#__PURE__*/_jsxDEV(Settings, {\n        onClose: toggleSettings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  };\n  _s(App, \"/HNRhfY7kR7U/SX68F67twdHaCo=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Timer, {\n      minutes: minutes,\n      seconds: seconds,\n      currentMode: currentMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      isActive: isActive,\n      startStopTimer: startStopTimer,\n      resetTimer: resetTimer,\n      startShortBreak: startShortBreak,\n      startLongBreak: startLongBreak\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Atividades em andamento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.completed ? \"completed\" : \"\",\n        children: [task.task, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCompleteTask(index),\n          children: task.completed ? \"Desmarcar\" : \"Concluir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveTask(index),\n          children: \"Remover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: handleTaskChange,\n        placeholder: \"O que voc\\xEA est\\xE1 fazendo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        className: \"add-task-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), \" Adicionar Tarefa\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"aEcgB2cuY6IBaPfBQSf+Kh/2OS0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Settings","Timer","Controls","Footer","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","WORK_TIME","SHORT_BREAK","LONG_BREAK","minutes","setMinutes","seconds","setSeconds","isActive","setIsActive","currentMode","setCurrentMode","tasks","setTasks","newTask","setNewTask","handleAddTask","trim","task","completed","handleTaskChange","e","target","value","savedTasks","JSON","parse","localStorage","getItem","setItem","stringify","audio","Audio","play","interval","setInterval","clearInterval","startStopTimer","resetTimer","startShortBreak","startLongBreak","handleCompleteTask","index","newTasks","handleRemoveTask","filter","taskIndex","isSettingsOpen","setIsSettingsOpen","toggleSettings","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onClose","map","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["D:/PomodoroReact/pomodoro/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Settings from \"./settings\";\nimport \"./App.css\";\nimport Timer from \"./components/Timer\";\nimport Controls from \"./components/Controls\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  const WORK_TIME = 25;\n  const SHORT_BREAK = 5;\n  const LONG_BREAK = 15;\n\n  const [minutes, setMinutes] = useState(WORK_TIME);\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [currentMode, setCurrentMode] = useState(\"work\");\n\n  // Tarefas\n  const [tasks, setTasks] = useState([]); // Estado para armazenar as tarefas\n  const [newTask, setNewTask] = useState(\"\"); // Estado para nova tarefa\n\n  // Função para adicionar nova tarefa\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      setTasks([...tasks, { task: newTask, completed: false }]); // Adiciona a nova tarefa ao estado\n      setNewTask(\"\"); // Limpa o campo de nova tarefa\n    }\n  };\n\n  // Função para atualizar o valor da nova tarefa\n  const handleTaskChange = (e) => {\n    setNewTask(e.target.value);\n  };\n\n  useEffect(() => {\n    // Verifica se já existem tarefas no localStorage\n    const savedTasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    if (savedTasks) {\n      setTasks(savedTasks);\n    }\n  }, []);\n\n  useEffect(() => {\n    // Atualiza o localStorage sempre que as tarefas mudarem\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  useEffect(() => {\n    if (minutes === 0 && seconds === 0) {\n      const audio = new Audio('/path/to/alarm-sound.mp3');\n      audio.play();\n    }\n  }, [minutes, seconds]);\n\n  useEffect(() => {\n    let interval;\n    if (isActive) {\n      interval = setInterval(() => {\n        if (seconds === 0) {\n          if (minutes === 0) {\n            switch (currentMode) {\n              case \"work\":\n                setCurrentMode(\"shortBreak\");\n                setMinutes(SHORT_BREAK);\n                break;\n              case \"shortBreak\":\n                setCurrentMode(\"work\");\n                setMinutes(WORK_TIME);\n                break;\n              case \"longBreak\":\n                setCurrentMode(\"work\");\n                setMinutes(WORK_TIME);\n                break;\n              default:\n                break;\n            }\n            setSeconds(0);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        } else {\n          setSeconds(seconds - 1);\n        }\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds, minutes, currentMode]);\n\n  const startStopTimer = () => setIsActive(!isActive);\n  const resetTimer = () => {\n    setIsActive(false);\n    setCurrentMode(\"work\");\n    setMinutes(WORK_TIME);\n    setSeconds(0);\n  };\n  const startShortBreak = () => {\n    setIsActive(false);\n    setCurrentMode(\"shortBreak\");\n    setMinutes(SHORT_BREAK);\n    setSeconds(0);\n    setIsActive(true);\n  };\n  const startLongBreak = () => {\n    setIsActive(false);\n    setCurrentMode(\"longBreak\");\n    setMinutes(LONG_BREAK);\n    setSeconds(0);\n    setIsActive(true);\n  };\n\n  const handleCompleteTask = (index) => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = !newTasks[index].completed;\n    setTasks(newTasks);\n  };\n\n  const handleRemoveTask = (index) => {\n    const newTasks = tasks.filter((task, taskIndex) => taskIndex !== index);\n    setTasks(newTasks);\n  };\n\n\n  const App = () => {\n    // Estado para controlar se o painel de configurações está aberto ou não\n    const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  \n    // Função para abrir e fechar o painel\n    const toggleSettings = () => {\n      setIsSettingsOpen((prev) => !prev);\n    };\n  \n    return (\n      <div className={`app ${isSettingsOpen ? \"settings-open\" : \"\"}`}>\n        <h1>Bem-vindo ao seu aplicativo Pomodoro!</h1>\n        \n        {/* Botão para abrir/fechar as configurações */}\n        <button onClick={toggleSettings}>\n          {isSettingsOpen ? \"Fechar Configurações\" : \"Abrir Configurações\"}\n        </button>\n  \n        {/* Renderiza o painel de configurações se isSettingsOpen for verdadeiro */}\n        {isSettingsOpen && <Settings onClose={toggleSettings} />}\n      </div>\n    );\n  };\n\n  \n  return (\n    <div className=\"App\">\n      <Timer minutes={minutes} seconds={seconds} currentMode={currentMode} />\n      <Controls\n        isActive={isActive}\n        startStopTimer={startStopTimer}\n        resetTimer={resetTimer}\n        startShortBreak={startShortBreak}\n        startLongBreak={startLongBreak}\n      />\n      <div>\n        <h5>Atividades em andamento</h5>\n      </div>\n      <ul className=\"task-list\">\n        {tasks.map((task, index) => (\n          <li key={index} className={task.completed ? \"completed\" : \"\"}>\n            {task.task}\n            <button onClick={() => handleCompleteTask(index)}>\n              {task.completed ? \"Desmarcar\" : \"Concluir\"}\n            </button>\n            <button onClick={() => handleRemoveTask(index)}>Remover</button>\n          </li>\n        ))}\n      </ul>\n\n      {/* Seção de adicionar tarefas */}\n      <div className=\"task-section\">\n        <input\n          type=\"text\"\n          value={newTask}\n          onChange={handleTaskChange}\n          placeholder=\"O que você está fazendo\"\n        />\n        <button onClick={handleAddTask} className=\"add-task-btn\">\n          <i className=\"fas fa-plus\"></i> Adicionar Tarefa\n        </button>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}