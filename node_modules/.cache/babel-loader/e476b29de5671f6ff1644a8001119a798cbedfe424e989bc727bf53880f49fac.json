{"ast":null,"code":"var _jsxFileName = \"D:\\\\PomodoroReact\\\\pomodoro\\\\src\\\\Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = ({\n  onClose\n}) => {\n  _s();\n  // Tempos de Pomodoro\n  const [pomodoroTime, setPomodoroTime] = useState(25);\n  const [shortBreakTime, setShortBreakTime] = useState(5);\n  const [longBreakTime, setLongBreakTime] = useState(15);\n  const [longBreakInterval, setLongBreakInterval] = useState(4);\n  const [isAutoStartBreaks, setIsAutoStartBreaks] = useState(false);\n\n  // Configurações de som\n  const [alarmSoundVolume, setAlarmSoundVolume] = useState(50);\n  const [tickingSoundVolume, setTickingSoundVolume] = useState(50);\n\n  // Tema\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [hourFormat, setHourFormat] = useState(\"24\");\n  const [isSmallWindow, setIsSmallWindow] = useState(false);\n\n  // Tarefas automáticas\n  const [isAutoCheckTasks, setIsAutoCheckTasks] = useState(false);\n  const [isAutoSwitchTasks, setIsAutoSwitchTasks] = useState(false);\n\n  // Configuração de notificações\n  const [notificationReminderTime, setNotificationReminderTime] = useState(5);\n  const [isMobileAlarm, setIsMobileAlarm] = useState(false);\n\n  // Salvar configurações no localStorage\n  useEffect(() => {\n    const savedSettings = JSON.parse(localStorage.getItem(\"settings\"));\n    if (savedSettings) {\n      setPomodoroTime(savedSettings.pomodoroTime || 25);\n      setShortBreakTime(savedSettings.shortBreakTime || 5);\n      setLongBreakTime(savedSettings.longBreakTime || 15);\n      setLongBreakInterval(savedSettings.longBreakInterval || 4);\n      setIsAutoStartBreaks(savedSettings.isAutoStartBreaks || false);\n      setAlarmSoundVolume(savedSettings.alarmSoundVolume || 50);\n      setTickingSoundVolume(savedSettings.tickingSoundVolume || 50);\n      setIsDarkMode(savedSettings.isDarkMode || false);\n      setHourFormat(savedSettings.hourFormat || \"24\");\n      setIsSmallWindow(savedSettings.isSmallWindow || false);\n      setIsAutoCheckTasks(savedSettings.isAutoCheckTasks || false);\n      setIsAutoSwitchTasks(savedSettings.isAutoSwitchTasks || false);\n      setNotificationReminderTime(savedSettings.notificationReminderTime || 5);\n      setIsMobileAlarm(savedSettings.isMobileAlarm || false);\n    }\n  }, []);\n  useEffect(() => {\n    const settings = {\n      pomodoroTime,\n      shortBreakTime,\n      longBreakTime,\n      longBreakInterval,\n      isAutoStartBreaks,\n      alarmSoundVolume,\n      tickingSoundVolume,\n      isDarkMode,\n      hourFormat,\n      isSmallWindow,\n      isAutoCheckTasks,\n      isAutoSwitchTasks,\n      notificationReminderTime,\n      isMobileAlarm\n    };\n    localStorage.setItem(\"settings\", JSON.stringify(settings));\n  }, [pomodoroTime, shortBreakTime, longBreakTime, longBreakInterval, isAutoStartBreaks, alarmSoundVolume, tickingSoundVolume, isDarkMode, hourFormat, isSmallWindow, isAutoCheckTasks, isAutoSwitchTasks, notificationReminderTime, isMobileAlarm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close-settings\",\n      onClick: onClose,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Configura\\xE7\\xF5es\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Tempo Pomodoro (minutos):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: pomodoroTime,\n          onChange: e => setPomodoroTime(e.target.value),\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Tempo de Pausa Curta (minutos):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: shortBreakTime,\n          onChange: e => setShortBreakTime(e.target.value),\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Tempo de Pausa Longa (minutos):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: longBreakTime,\n          onChange: e => setLongBreakTime(e.target.value),\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Intervalo para Pausa Longa (quantas sess\\xF5es de Pomodoro):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: longBreakInterval,\n          onChange: e => setLongBreakInterval(e.target.value),\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Iniciar Pausas Automaticamente:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isAutoStartBreaks,\n          onChange: () => setIsAutoStartBreaks(!isAutoStartBreaks)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Som\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Volume do Alarme:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"100\",\n          value: alarmSoundVolume,\n          onChange: e => setAlarmSoundVolume(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Volume do Som do Rel\\xF3gio:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"100\",\n          value: tickingSoundVolume,\n          onChange: e => setTickingSoundVolume(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Tema Escuro:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isDarkMode,\n          onChange: () => setIsDarkMode(!isDarkMode)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Formato de Hora:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: hourFormat,\n          onChange: e => setHourFormat(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"24\",\n            children: \"24 horas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"12\",\n            children: \"12 horas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Modo Janela Pequena:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isSmallWindow,\n          onChange: () => setIsSmallWindow(!isSmallWindow)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tarefas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Marcar Tarefas Automaticamente:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isAutoCheckTasks,\n          onChange: () => setIsAutoCheckTasks(!isAutoCheckTasks)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Trocar Tarefas Automaticamente:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isAutoSwitchTasks,\n          onChange: () => setIsAutoSwitchTasks(!isAutoSwitchTasks)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Notifica\\xE7\\xF5es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Tempo de Lembrete de Notifica\\xE7\\xE3o (minutos):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: notificationReminderTime,\n          onChange: e => setNotificationReminderTime(e.target.value),\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Alarme no Celular:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isMobileAlarm,\n          onChange: () => setIsMobileAlarm(!isMobileAlarm)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"zWo54K8eBK31Yj/puTGwzFub/Ew=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Settings","onClose","_s","pomodoroTime","setPomodoroTime","shortBreakTime","setShortBreakTime","longBreakTime","setLongBreakTime","longBreakInterval","setLongBreakInterval","isAutoStartBreaks","setIsAutoStartBreaks","alarmSoundVolume","setAlarmSoundVolume","tickingSoundVolume","setTickingSoundVolume","isDarkMode","setIsDarkMode","hourFormat","setHourFormat","isSmallWindow","setIsSmallWindow","isAutoCheckTasks","setIsAutoCheckTasks","isAutoSwitchTasks","setIsAutoSwitchTasks","notificationReminderTime","setNotificationReminderTime","isMobileAlarm","setIsMobileAlarm","savedSettings","JSON","parse","localStorage","getItem","settings","setItem","stringify","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","min","checked","max","_c","$RefreshReg$"],"sources":["D:/PomodoroReact/pomodoro/src/Settings.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Settings = ({ onClose }) => {\r\n  // Tempos de Pomodoro\r\n  const [pomodoroTime, setPomodoroTime] = useState(25);\r\n  const [shortBreakTime, setShortBreakTime] = useState(5);\r\n  const [longBreakTime, setLongBreakTime] = useState(15);\r\n  const [longBreakInterval, setLongBreakInterval] = useState(4);\r\n  const [isAutoStartBreaks, setIsAutoStartBreaks] = useState(false);\r\n\r\n  // Configurações de som\r\n  const [alarmSoundVolume, setAlarmSoundVolume] = useState(50);\r\n  const [tickingSoundVolume, setTickingSoundVolume] = useState(50);\r\n\r\n  // Tema\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [hourFormat, setHourFormat] = useState(\"24\");\r\n  const [isSmallWindow, setIsSmallWindow] = useState(false);\r\n\r\n  // Tarefas automáticas\r\n  const [isAutoCheckTasks, setIsAutoCheckTasks] = useState(false);\r\n  const [isAutoSwitchTasks, setIsAutoSwitchTasks] = useState(false);\r\n\r\n  // Configuração de notificações\r\n  const [notificationReminderTime, setNotificationReminderTime] = useState(5);\r\n  const [isMobileAlarm, setIsMobileAlarm] = useState(false);\r\n\r\n  // Salvar configurações no localStorage\r\n  useEffect(() => {\r\n    const savedSettings = JSON.parse(localStorage.getItem(\"settings\"));\r\n    if (savedSettings) {\r\n      setPomodoroTime(savedSettings.pomodoroTime || 25);\r\n      setShortBreakTime(savedSettings.shortBreakTime || 5);\r\n      setLongBreakTime(savedSettings.longBreakTime || 15);\r\n      setLongBreakInterval(savedSettings.longBreakInterval || 4);\r\n      setIsAutoStartBreaks(savedSettings.isAutoStartBreaks || false);\r\n      setAlarmSoundVolume(savedSettings.alarmSoundVolume || 50);\r\n      setTickingSoundVolume(savedSettings.tickingSoundVolume || 50);\r\n      setIsDarkMode(savedSettings.isDarkMode || false);\r\n      setHourFormat(savedSettings.hourFormat || \"24\");\r\n      setIsSmallWindow(savedSettings.isSmallWindow || false);\r\n      setIsAutoCheckTasks(savedSettings.isAutoCheckTasks || false);\r\n      setIsAutoSwitchTasks(savedSettings.isAutoSwitchTasks || false);\r\n      setNotificationReminderTime(savedSettings.notificationReminderTime || 5);\r\n      setIsMobileAlarm(savedSettings.isMobileAlarm || false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const settings = {\r\n      pomodoroTime,\r\n      shortBreakTime,\r\n      longBreakTime,\r\n      longBreakInterval,\r\n      isAutoStartBreaks,\r\n      alarmSoundVolume,\r\n      tickingSoundVolume,\r\n      isDarkMode,\r\n      hourFormat,\r\n      isSmallWindow,\r\n      isAutoCheckTasks,\r\n      isAutoSwitchTasks,\r\n      notificationReminderTime,\r\n      isMobileAlarm,\r\n    };\r\n    localStorage.setItem(\"settings\", JSON.stringify(settings));\r\n  }, [\r\n    pomodoroTime, shortBreakTime, longBreakTime, longBreakInterval, isAutoStartBreaks,\r\n    alarmSoundVolume, tickingSoundVolume, isDarkMode, hourFormat, isSmallWindow,\r\n    isAutoCheckTasks, isAutoSwitchTasks, notificationReminderTime, isMobileAlarm\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"settings-panel\">\r\n      <button className=\"close-settings\" onClick={onClose}>X</button>\r\n      <h2>Configurações</h2>\r\n\r\n      {/* Timer Settings */}\r\n      <div className=\"setting-group\">\r\n        <h3>Timer</h3>\r\n        <label>\r\n          Tempo Pomodoro (minutos):\r\n          <input\r\n            type=\"number\"\r\n            value={pomodoroTime}\r\n            onChange={(e) => setPomodoroTime(e.target.value)}\r\n            min=\"1\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Tempo de Pausa Curta (minutos):\r\n          <input\r\n            type=\"number\"\r\n            value={shortBreakTime}\r\n            onChange={(e) => setShortBreakTime(e.target.value)}\r\n            min=\"1\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Tempo de Pausa Longa (minutos):\r\n          <input\r\n            type=\"number\"\r\n            value={longBreakTime}\r\n            onChange={(e) => setLongBreakTime(e.target.value)}\r\n            min=\"1\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Intervalo para Pausa Longa (quantas sessões de Pomodoro):\r\n          <input\r\n            type=\"number\"\r\n            value={longBreakInterval}\r\n            onChange={(e) => setLongBreakInterval(e.target.value)}\r\n            min=\"1\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Iniciar Pausas Automaticamente:\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isAutoStartBreaks}\r\n            onChange={() => setIsAutoStartBreaks(!isAutoStartBreaks)}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      {/* Sound Settings */}\r\n      <div className=\"setting-group\">\r\n        <h3>Som</h3>\r\n        <label>\r\n          Volume do Alarme:\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={alarmSoundVolume}\r\n            onChange={(e) => setAlarmSoundVolume(e.target.value)}\r\n          />\r\n        </label>\r\n        <label>\r\n          Volume do Som do Relógio:\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={tickingSoundVolume}\r\n            onChange={(e) => setTickingSoundVolume(e.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      {/* Theme Settings */}\r\n      <div className=\"setting-group\">\r\n        <h3>Tema</h3>\r\n        <label>\r\n          Tema Escuro:\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isDarkMode}\r\n            onChange={() => setIsDarkMode(!isDarkMode)}\r\n          />\r\n        </label>\r\n        <label>\r\n          Formato de Hora:\r\n          <select\r\n            value={hourFormat}\r\n            onChange={(e) => setHourFormat(e.target.value)}\r\n          >\r\n            <option value=\"24\">24 horas</option>\r\n            <option value=\"12\">12 horas</option>\r\n          </select>\r\n        </label>\r\n        <label>\r\n          Modo Janela Pequena:\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isSmallWindow}\r\n            onChange={() => setIsSmallWindow(!isSmallWindow)}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      {/* Task Settings */}\r\n      <div className=\"setting-group\">\r\n        <h3>Tarefas</h3>\r\n        <label>\r\n          Marcar Tarefas Automaticamente:\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isAutoCheckTasks}\r\n            onChange={() => setIsAutoCheckTasks(!isAutoCheckTasks)}\r\n          />\r\n        </label>\r\n        <label>\r\n          Trocar Tarefas Automaticamente:\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isAutoSwitchTasks}\r\n            onChange={() => setIsAutoSwitchTasks(!isAutoSwitchTasks)}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      {/* Notification Settings */}\r\n      <div className=\"setting-group\">\r\n        <h3>Notificações</h3>\r\n        <label>\r\n          Tempo de Lembrete de Notificação (minutos):\r\n          <input\r\n            type=\"number\"\r\n            value={notificationReminderTime}\r\n            onChange={(e) => setNotificationReminderTime(e.target.value)}\r\n            min=\"1\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Alarme no Celular:\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isMobileAlarm}\r\n            onChange={() => setIsMobileAlarm(!isMobileAlarm)}\r\n          />\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAChC;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACe,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAEjE;EACA,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACmB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;;EAEhE;EACA,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACA,MAAM,CAAC2B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC6B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;;EAEjE;EACA,MAAM,CAAC+B,wBAAwB,EAAEC,2BAA2B,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC;EAC3E,MAAM,CAACiC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMkC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IAClE,IAAIJ,aAAa,EAAE;MACjB3B,eAAe,CAAC2B,aAAa,CAAC5B,YAAY,IAAI,EAAE,CAAC;MACjDG,iBAAiB,CAACyB,aAAa,CAAC1B,cAAc,IAAI,CAAC,CAAC;MACpDG,gBAAgB,CAACuB,aAAa,CAACxB,aAAa,IAAI,EAAE,CAAC;MACnDG,oBAAoB,CAACqB,aAAa,CAACtB,iBAAiB,IAAI,CAAC,CAAC;MAC1DG,oBAAoB,CAACmB,aAAa,CAACpB,iBAAiB,IAAI,KAAK,CAAC;MAC9DG,mBAAmB,CAACiB,aAAa,CAAClB,gBAAgB,IAAI,EAAE,CAAC;MACzDG,qBAAqB,CAACe,aAAa,CAAChB,kBAAkB,IAAI,EAAE,CAAC;MAC7DG,aAAa,CAACa,aAAa,CAACd,UAAU,IAAI,KAAK,CAAC;MAChDG,aAAa,CAACW,aAAa,CAACZ,UAAU,IAAI,IAAI,CAAC;MAC/CG,gBAAgB,CAACS,aAAa,CAACV,aAAa,IAAI,KAAK,CAAC;MACtDG,mBAAmB,CAACO,aAAa,CAACR,gBAAgB,IAAI,KAAK,CAAC;MAC5DG,oBAAoB,CAACK,aAAa,CAACN,iBAAiB,IAAI,KAAK,CAAC;MAC9DG,2BAA2B,CAACG,aAAa,CAACJ,wBAAwB,IAAI,CAAC,CAAC;MACxEG,gBAAgB,CAACC,aAAa,CAACF,aAAa,IAAI,KAAK,CAAC;IACxD;EACF,CAAC,EAAE,EAAE,CAAC;EAENhC,SAAS,CAAC,MAAM;IACd,MAAMuC,QAAQ,GAAG;MACfjC,YAAY;MACZE,cAAc;MACdE,aAAa;MACbE,iBAAiB;MACjBE,iBAAiB;MACjBE,gBAAgB;MAChBE,kBAAkB;MAClBE,UAAU;MACVE,UAAU;MACVE,aAAa;MACbE,gBAAgB;MAChBE,iBAAiB;MACjBE,wBAAwB;MACxBE;IACF,CAAC;IACDK,YAAY,CAACG,OAAO,CAAC,UAAU,EAAEL,IAAI,CAACM,SAAS,CAACF,QAAQ,CAAC,CAAC;EAC5D,CAAC,EAAE,CACDjC,YAAY,EAAEE,cAAc,EAAEE,aAAa,EAAEE,iBAAiB,EAAEE,iBAAiB,EACjFE,gBAAgB,EAAEE,kBAAkB,EAAEE,UAAU,EAAEE,UAAU,EAAEE,aAAa,EAC3EE,gBAAgB,EAAEE,iBAAiB,EAAEE,wBAAwB,EAAEE,aAAa,CAC7E,CAAC;EAEF,oBACE9B,OAAA;IAAKwC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BzC,OAAA;MAAQwC,SAAS,EAAC,gBAAgB;MAACE,OAAO,EAAExC,OAAQ;MAAAuC,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/D9C,OAAA;MAAAyC,QAAA,EAAI;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGtB9C,OAAA;MAAKwC,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BzC,OAAA;QAAAyC,QAAA,EAAI;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACd9C,OAAA;QAAAyC,QAAA,GAAO,2BAEL,eAAAzC,OAAA;UACE+C,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAE5C,YAAa;UACpB6C,QAAQ,EAAGC,CAAC,IAAK7C,eAAe,CAAC6C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACjDI,GAAG,EAAC;QAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR9C,OAAA;QAAAyC,QAAA,GAAO,iCAEL,eAAAzC,OAAA;UACE+C,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAE1C,cAAe;UACtB2C,QAAQ,EAAGC,CAAC,IAAK3C,iBAAiB,CAAC2C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACnDI,GAAG,EAAC;QAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR9C,OAAA;QAAAyC,QAAA,GAAO,iCAEL,eAAAzC,OAAA;UACE+C,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAExC,aAAc;UACrByC,QAAQ,EAAGC,CAAC,IAAKzC,gBAAgB,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAClDI,GAAG,EAAC;QAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR9C,OAAA;QAAAyC,QAAA,GAAO,8DAEL,eAAAzC,OAAA;UACE+C,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAEtC,iBAAkB;UACzBuC,QAAQ,EAAGC,CAAC,IAAKvC,oBAAoB,CAACuC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACtDI,GAAG,EAAC;QAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR9C,OAAA;QAAAyC,QAAA,GAAO,iCAEL,eAAAzC,OAAA;UACE+C,IAAI,EAAC,UAAU;UACfM,OAAO,EAAEzC,iBAAkB;UAC3BqC,QAAQ,EAAEA,CAAA,KAAMpC,oBAAoB,CAAC,CAACD,iBAAiB;QAAE;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGN9C,OAAA;MAAKwC,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BzC,OAAA;QAAAyC,QAAA,EAAI;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACZ9C,OAAA;QAAAyC,QAAA,GAAO,mBAEL,eAAAzC,OAAA;UACE+C,IAAI,EAAC,OAAO;UACZK,GAAG,EAAC,GAAG;UACPE,GAAG,EAAC,KAAK;UACTN,KAAK,EAAElC,gBAAiB;UACxBmC,QAAQ,EAAGC,CAAC,IAAKnC,mBAAmB,CAACmC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR9C,OAAA;QAAAyC,QAAA,GAAO,8BAEL,eAAAzC,OAAA;UACE+C,IAAI,EAAC,OAAO;UACZK,GAAG,EAAC,GAAG;UACPE,GAAG,EAAC,KAAK;UACTN,KAAK,EAAEhC,kBAAmB;UAC1BiC,QAAQ,EAAGC,CAAC,IAAKjC,qBAAqB,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGN9C,OAAA;MAAKwC,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BzC,OAAA;QAAAyC,QAAA,EAAI;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACb9C,OAAA;QAAAyC,QAAA,GAAO,cAEL,eAAAzC,OAAA;UACE+C,IAAI,EAAC,UAAU;UACfM,OAAO,EAAEnC,UAAW;UACpB+B,QAAQ,EAAEA,CAAA,KAAM9B,aAAa,CAAC,CAACD,UAAU;QAAE;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR9C,OAAA;QAAAyC,QAAA,GAAO,kBAEL,eAAAzC,OAAA;UACEgD,KAAK,EAAE5B,UAAW;UAClB6B,QAAQ,EAAGC,CAAC,IAAK7B,aAAa,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAP,QAAA,gBAE/CzC,OAAA;YAAQgD,KAAK,EAAC,IAAI;YAAAP,QAAA,EAAC;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpC9C,OAAA;YAAQgD,KAAK,EAAC,IAAI;YAAAP,QAAA,EAAC;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACR9C,OAAA;QAAAyC,QAAA,GAAO,sBAEL,eAAAzC,OAAA;UACE+C,IAAI,EAAC,UAAU;UACfM,OAAO,EAAE/B,aAAc;UACvB2B,QAAQ,EAAEA,CAAA,KAAM1B,gBAAgB,CAAC,CAACD,aAAa;QAAE;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGN9C,OAAA;MAAKwC,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BzC,OAAA;QAAAyC,QAAA,EAAI;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChB9C,OAAA;QAAAyC,QAAA,GAAO,iCAEL,eAAAzC,OAAA;UACE+C,IAAI,EAAC,UAAU;UACfM,OAAO,EAAE7B,gBAAiB;UAC1ByB,QAAQ,EAAEA,CAAA,KAAMxB,mBAAmB,CAAC,CAACD,gBAAgB;QAAE;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR9C,OAAA;QAAAyC,QAAA,GAAO,iCAEL,eAAAzC,OAAA;UACE+C,IAAI,EAAC,UAAU;UACfM,OAAO,EAAE3B,iBAAkB;UAC3BuB,QAAQ,EAAEA,CAAA,KAAMtB,oBAAoB,CAAC,CAACD,iBAAiB;QAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGN9C,OAAA;MAAKwC,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BzC,OAAA;QAAAyC,QAAA,EAAI;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB9C,OAAA;QAAAyC,QAAA,GAAO,mDAEL,eAAAzC,OAAA;UACE+C,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAEpB,wBAAyB;UAChCqB,QAAQ,EAAGC,CAAC,IAAKrB,2BAA2B,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC7DI,GAAG,EAAC;QAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR9C,OAAA;QAAAyC,QAAA,GAAO,oBAEL,eAAAzC,OAAA;UACE+C,IAAI,EAAC,UAAU;UACfM,OAAO,EAAEvB,aAAc;UACvBmB,QAAQ,EAAEA,CAAA,KAAMlB,gBAAgB,CAAC,CAACD,aAAa;QAAE;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3C,EAAA,CAhOIF,QAAQ;AAAAsD,EAAA,GAARtD,QAAQ;AAkOd,eAAeA,QAAQ;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}