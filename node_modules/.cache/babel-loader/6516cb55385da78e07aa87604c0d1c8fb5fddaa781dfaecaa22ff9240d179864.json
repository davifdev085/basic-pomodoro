{"ast":null,"code":"var _jsxFileName = \"D:\\\\PomodoroReact\\\\pomodoro\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [minutes, setMinutes] = useState(25); // Tempo de trabalho inicial\n  const [seconds, setSeconds] = useState(0); // Segundos\n  const [isActive, setIsActive] = useState(false); // Estado do temporizador\n  const [isWorkTime, setIsWorkTime] = useState(true); // Determina se é tempo de trabalho ou descanso\n\n  useEffect(() => {\n    let interval;\n    if (isActive) {\n      interval = setInterval(() => {\n        if (seconds === 0) {\n          if (minutes === 0) {\n            // Ciclo concluído\n            if (isWorkTime) {\n              setIsWorkTime(false); // Muda para descanso\n              setMinutes(5); // Define o tempo de descanso\n            } else {\n              setIsWorkTime(true); // Muda para trabalho\n              setMinutes(25); // Define o tempo de trabalho\n            }\n            setSeconds(0); // Reseta os segundos\n          } else {\n            setMinutes(minutes - 1); // Diminui um minuto\n            setSeconds(59); // Reseta os segundos\n          }\n        } else {\n          setSeconds(seconds - 1); // Diminui os segundos\n        }\n      }, 1000);\n    } else {\n      clearInterval(interval); // Limpa o intervalo quando o temporizador está pausado\n    }\n    return () => clearInterval(interval); // Limpa o intervalo ao desmontar o componente\n  }, [isActive, seconds, minutes, isWorkTime]);\n  const startStopTimer = () => {\n    setIsActive(!isActive); // Alterna entre iniciar e pausar\n  };\n  const resetTimer = () => {\n    setIsActive(false); // Para o temporizador\n    setMinutes(25); // Reinicia o tempo de trabalho\n    setSeconds(0); // Reinicia os segundos\n    setIsWorkTime(true); // Volta para o tempo de trabalho\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isWorkTime ? \"Tempo de Trabalho\" : \"Tempo de Descanso\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: String(minutes).padStart(2, \"0\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: String(seconds).padStart(2, \"0\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 57\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startStopTimer,\n        children: isActive ? \"Pausar\" : \"Iniciar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        children: \"Reiniciar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m5vMciMfOrs1y5zs2BkxjJs0MbE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","minutes","setMinutes","seconds","setSeconds","isActive","setIsActive","isWorkTime","setIsWorkTime","interval","setInterval","clearInterval","startStopTimer","resetTimer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","String","padStart","onClick","_c","$RefreshReg$"],"sources":["D:/PomodoroReact/pomodoro/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [minutes, setMinutes] = useState(25); // Tempo de trabalho inicial\n  const [seconds, setSeconds] = useState(0); // Segundos\n  const [isActive, setIsActive] = useState(false); // Estado do temporizador\n  const [isWorkTime, setIsWorkTime] = useState(true); // Determina se é tempo de trabalho ou descanso\n\n  useEffect(() => {\n    let interval;\n\n    if (isActive) {\n      interval = setInterval(() => {\n        if (seconds === 0) {\n          if (minutes === 0) {\n            // Ciclo concluído\n            if (isWorkTime) {\n              setIsWorkTime(false); // Muda para descanso\n              setMinutes(5); // Define o tempo de descanso\n            } else {\n              setIsWorkTime(true); // Muda para trabalho\n              setMinutes(25); // Define o tempo de trabalho\n            }\n            setSeconds(0); // Reseta os segundos\n          } else {\n            setMinutes(minutes - 1); // Diminui um minuto\n            setSeconds(59); // Reseta os segundos\n          }\n        } else {\n          setSeconds(seconds - 1); // Diminui os segundos\n        }\n      }, 1000);\n    } else {\n      clearInterval(interval); // Limpa o intervalo quando o temporizador está pausado\n    }\n\n    return () => clearInterval(interval); // Limpa o intervalo ao desmontar o componente\n  }, [isActive, seconds, minutes, isWorkTime]);\n\n  const startStopTimer = () => {\n    setIsActive(!isActive); // Alterna entre iniciar e pausar\n  };\n\n  const resetTimer = () => {\n    setIsActive(false); // Para o temporizador\n    setMinutes(25); // Reinicia o tempo de trabalho\n    setSeconds(0); // Reinicia os segundos\n    setIsWorkTime(true); // Volta para o tempo de trabalho\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>{isWorkTime ? \"Tempo de Trabalho\" : \"Tempo de Descanso\"}</h1>\n      <div className=\"timer\">\n        <span>{String(minutes).padStart(2, \"0\")}</span>:<span>{String(seconds).padStart(2, \"0\")}</span>\n      </div>\n      <div className=\"controls\">\n        <button onClick={startStopTimer}>{isActive ? \"Pausar\" : \"Iniciar\"}</button>\n        <button onClick={resetTimer}>Reiniciar</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}