{"ast":null,"code":"var _jsxFileName = \"D:\\\\PomodoroReact\\\\pomodoro\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Timer from \"./components/Timer\";\nimport Controls from \"./components/Controls\";\nimport Footer from \"./components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Tempos de Pomodoro\n  const [pomodoroTime, setPomodoroTime] = useState(25); // Tempo Pomodoro\n  const [shortBreakTime, setShortBreakTime] = useState(5); // Intervalo Curto\n  const [longBreakTime, setLongBreakTime] = useState(15); // Intervalo Longo\n  const [longBreakInterval, setLongBreakInterval] = useState(4); // Intervalo Longo para Pomo\n  const [isAutoStartBreaks, setIsAutoStartBreaks] = useState(false); // Iniciar Automático Intervalos\n\n  // Configurações de som\n  const [alarmSoundVolume, setAlarmSoundVolume] = useState(50);\n  const [tickingSoundVolume, setTickingSoundVolume] = useState(50);\n\n  // Configurações de Tema\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [hourFormat, setHourFormat] = useState(\"24\"); // Pode ser \"12\" ou \"24\"\n  const [isSmallWindow, setIsSmallWindow] = useState(false);\n\n  // Configuração de tarefas\n  const [isAutoCheckTasks, setIsAutoCheckTasks] = useState(false); // Marcar Tarefas automaticamente\n  const [isAutoSwitchTasks, setIsAutoSwitchTasks] = useState(false); // Trocar Tarefas automaticamente\n\n  // Configuração de notificação\n  const [notificationReminderTime, setNotificationReminderTime] = useState(5); // Minutos para notificação de lembrete\n  const [isMobileAlarm, setIsMobileAlarm] = useState(false);\n  useEffect(() => {\n    // Carregar configurações do localStorage\n    const savedSettings = JSON.parse(localStorage.getItem(\"settings\"));\n    if (savedSettings) {\n      setPomodoroTime(savedSettings.pomodoroTime || 25);\n      setShortBreakTime(savedSettings.shortBreakTime || 5);\n      setLongBreakTime(savedSettings.longBreakTime || 15);\n      setLongBreakInterval(savedSettings.longBreakInterval || 4);\n      setIsAutoStartBreaks(savedSettings.isAutoStartBreaks || false);\n      setAlarmSoundVolume(savedSettings.alarmSoundVolume || 50);\n      setTickingSoundVolume(savedSettings.tickingSoundVolume || 50);\n      setIsDarkMode(savedSettings.isDarkMode || false);\n      setHourFormat(savedSettings.hourFormat || \"24\");\n      setIsSmallWindow(savedSettings.isSmallWindow || false);\n      setIsAutoCheckTasks(savedSettings.isAutoCheckTasks || false);\n      setIsAutoSwitchTasks(savedSettings.isAutoSwitchTasks || false);\n      setNotificationReminderTime(savedSettings.notificationReminderTime || 5);\n      setIsMobileAlarm(savedSettings.isMobileAlarm || false);\n    }\n  }, []);\n  useEffect(() => {\n    // Atualizar no localStorage quando as configurações mudarem\n    const settings = {\n      pomodoroTime,\n      shortBreakTime,\n      longBreakTime,\n      longBreakInterval,\n      isAutoStartBreaks,\n      alarmSoundVolume,\n      tickingSoundVolume,\n      isDarkMode,\n      hourFormat,\n      isSmallWindow,\n      isAutoCheckTasks,\n      isAutoSwitchTasks,\n      notificationReminderTime,\n      isMobileAlarm\n    };\n    localStorage.setItem(\"settings\", JSON.stringify(settings));\n  }, [pomodoroTime, shortBreakTime, longBreakTime, longBreakInterval, isAutoStartBreaks, alarmSoundVolume, tickingSoundVolume, isDarkMode, hourFormat, isSmallWindow, isAutoCheckTasks, isAutoSwitchTasks, notificationReminderTime, isMobileAlarm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? \"dark\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(Timer, {\n      minutes: pomodoroTime,\n      seconds: 0,\n      currentMode: \"work\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Configura\\xE7\\xF5es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Timer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Pomodoro (minutos):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: pomodoroTime,\n            onChange: e => setPomodoroTime(e.target.value),\n            min: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Intervalo Curto (minutos):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: shortBreakTime,\n            onChange: e => setShortBreakTime(e.target.value),\n            min: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Intervalo Longo (minutos):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: longBreakTime,\n            onChange: e => setLongBreakTime(e.target.value),\n            min: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Intervalo Longo ap\\xF3s quantos Pomodoros:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: longBreakInterval,\n            onChange: e => setLongBreakInterval(e.target.value),\n            min: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Iniciar Intervalos Autom\\xE1ticos:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isAutoStartBreaks,\n            onChange: () => setIsAutoStartBreaks(!isAutoStartBreaks)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tarefas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Marcar Tarefas automaticamente:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isAutoCheckTasks,\n            onChange: () => setIsAutoCheckTasks(!isAutoCheckTasks)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Trocar Tarefas automaticamente:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isAutoSwitchTasks,\n            onChange: () => setIsAutoSwitchTasks(!isAutoSwitchTasks)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Som\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Volume do Alarme:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            value: alarmSoundVolume,\n            onChange: e => setAlarmSoundVolume(e.target.value),\n            min: \"0\",\n            max: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Volume do Som de Tic:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            value: tickingSoundVolume,\n            onChange: e => setTickingSoundVolume(e.target.value),\n            min: \"0\",\n            max: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Modo Escuro:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isDarkMode,\n            onChange: () => setIsDarkMode(!isDarkMode)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Formato de Hora:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: hourFormat,\n            onChange: e => setHourFormat(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"24\",\n              children: \"24 Horas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"12\",\n              children: \"12 Horas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Janela Pequena:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isSmallWindow,\n            onChange: () => setIsSmallWindow(!isSmallWindow)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notifica\\xE7\\xF5es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Lembrete (minutos):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: notificationReminderTime,\n            onChange: e => setNotificationReminderTime(e.target.value),\n            min: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Alarme no Celular:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isMobileAlarm,\n            onChange: () => setIsMobileAlarm(!isMobileAlarm)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zWo54K8eBK31Yj/puTGwzFub/Ew=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Timer","Controls","Footer","jsxDEV","_jsxDEV","App","_s","pomodoroTime","setPomodoroTime","shortBreakTime","setShortBreakTime","longBreakTime","setLongBreakTime","longBreakInterval","setLongBreakInterval","isAutoStartBreaks","setIsAutoStartBreaks","alarmSoundVolume","setAlarmSoundVolume","tickingSoundVolume","setTickingSoundVolume","isDarkMode","setIsDarkMode","hourFormat","setHourFormat","isSmallWindow","setIsSmallWindow","isAutoCheckTasks","setIsAutoCheckTasks","isAutoSwitchTasks","setIsAutoSwitchTasks","notificationReminderTime","setNotificationReminderTime","isMobileAlarm","setIsMobileAlarm","savedSettings","JSON","parse","localStorage","getItem","settings","setItem","stringify","className","children","minutes","seconds","currentMode","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","min","checked","max","_c","$RefreshReg$"],"sources":["D:/PomodoroReact/pomodoro/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Timer from \"./components/Timer\";\nimport Controls from \"./components/Controls\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  // Tempos de Pomodoro\n  const [pomodoroTime, setPomodoroTime] = useState(25); // Tempo Pomodoro\n  const [shortBreakTime, setShortBreakTime] = useState(5); // Intervalo Curto\n  const [longBreakTime, setLongBreakTime] = useState(15); // Intervalo Longo\n  const [longBreakInterval, setLongBreakInterval] = useState(4); // Intervalo Longo para Pomo\n  const [isAutoStartBreaks, setIsAutoStartBreaks] = useState(false); // Iniciar Automático Intervalos\n\n  // Configurações de som\n  const [alarmSoundVolume, setAlarmSoundVolume] = useState(50);\n  const [tickingSoundVolume, setTickingSoundVolume] = useState(50);\n\n  // Configurações de Tema\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [hourFormat, setHourFormat] = useState(\"24\"); // Pode ser \"12\" ou \"24\"\n  const [isSmallWindow, setIsSmallWindow] = useState(false);\n\n  // Configuração de tarefas\n  const [isAutoCheckTasks, setIsAutoCheckTasks] = useState(false); // Marcar Tarefas automaticamente\n  const [isAutoSwitchTasks, setIsAutoSwitchTasks] = useState(false); // Trocar Tarefas automaticamente\n\n  // Configuração de notificação\n  const [notificationReminderTime, setNotificationReminderTime] = useState(5); // Minutos para notificação de lembrete\n  const [isMobileAlarm, setIsMobileAlarm] = useState(false);\n\n  useEffect(() => {\n    // Carregar configurações do localStorage\n    const savedSettings = JSON.parse(localStorage.getItem(\"settings\"));\n    if (savedSettings) {\n      setPomodoroTime(savedSettings.pomodoroTime || 25);\n      setShortBreakTime(savedSettings.shortBreakTime || 5);\n      setLongBreakTime(savedSettings.longBreakTime || 15);\n      setLongBreakInterval(savedSettings.longBreakInterval || 4);\n      setIsAutoStartBreaks(savedSettings.isAutoStartBreaks || false);\n      setAlarmSoundVolume(savedSettings.alarmSoundVolume || 50);\n      setTickingSoundVolume(savedSettings.tickingSoundVolume || 50);\n      setIsDarkMode(savedSettings.isDarkMode || false);\n      setHourFormat(savedSettings.hourFormat || \"24\");\n      setIsSmallWindow(savedSettings.isSmallWindow || false);\n      setIsAutoCheckTasks(savedSettings.isAutoCheckTasks || false);\n      setIsAutoSwitchTasks(savedSettings.isAutoSwitchTasks || false);\n      setNotificationReminderTime(savedSettings.notificationReminderTime || 5);\n      setIsMobileAlarm(savedSettings.isMobileAlarm || false);\n    }\n  }, []);\n\n  useEffect(() => {\n    // Atualizar no localStorage quando as configurações mudarem\n    const settings = {\n      pomodoroTime,\n      shortBreakTime,\n      longBreakTime,\n      longBreakInterval,\n      isAutoStartBreaks,\n      alarmSoundVolume,\n      tickingSoundVolume,\n      isDarkMode,\n      hourFormat,\n      isSmallWindow,\n      isAutoCheckTasks,\n      isAutoSwitchTasks,\n      notificationReminderTime,\n      isMobileAlarm,\n    };\n    localStorage.setItem(\"settings\", JSON.stringify(settings));\n  }, [\n    pomodoroTime, shortBreakTime, longBreakTime, longBreakInterval, isAutoStartBreaks,\n    alarmSoundVolume, tickingSoundVolume, isDarkMode, hourFormat, isSmallWindow,\n    isAutoCheckTasks, isAutoSwitchTasks, notificationReminderTime, isMobileAlarm\n  ]);\n\n  return (\n    <div className={`App ${isDarkMode ? \"dark\" : \"\"}`}>\n      <Timer\n        minutes={pomodoroTime}\n        seconds={0}\n        currentMode={\"work\"}\n      />\n      <Controls />\n\n      <div className=\"settings\">\n        <h2>Configurações</h2>\n        <div className=\"setting-group\">\n          <h3>Timer</h3>\n          <label>\n            Pomodoro (minutos):\n            <input\n              type=\"number\"\n              value={pomodoroTime}\n              onChange={(e) => setPomodoroTime(e.target.value)}\n              min={1}\n            />\n          </label>\n          <label>\n            Intervalo Curto (minutos):\n            <input\n              type=\"number\"\n              value={shortBreakTime}\n              onChange={(e) => setShortBreakTime(e.target.value)}\n              min={1}\n            />\n          </label>\n          <label>\n            Intervalo Longo (minutos):\n            <input\n              type=\"number\"\n              value={longBreakTime}\n              onChange={(e) => setLongBreakTime(e.target.value)}\n              min={1}\n            />\n          </label>\n          <label>\n            Intervalo Longo após quantos Pomodoros:\n            <input\n              type=\"number\"\n              value={longBreakInterval}\n              onChange={(e) => setLongBreakInterval(e.target.value)}\n              min={1}\n            />\n          </label>\n          <label>\n            Iniciar Intervalos Automáticos:\n            <input\n              type=\"checkbox\"\n              checked={isAutoStartBreaks}\n              onChange={() => setIsAutoStartBreaks(!isAutoStartBreaks)}\n            />\n          </label>\n        </div>\n\n        <div className=\"setting-group\">\n          <h3>Tarefas</h3>\n          <label>\n            Marcar Tarefas automaticamente:\n            <input\n              type=\"checkbox\"\n              checked={isAutoCheckTasks}\n              onChange={() => setIsAutoCheckTasks(!isAutoCheckTasks)}\n            />\n          </label>\n          <label>\n            Trocar Tarefas automaticamente:\n            <input\n              type=\"checkbox\"\n              checked={isAutoSwitchTasks}\n              onChange={() => setIsAutoSwitchTasks(!isAutoSwitchTasks)}\n            />\n          </label>\n        </div>\n\n        <div className=\"setting-group\">\n          <h3>Som</h3>\n          <label>\n            Volume do Alarme:\n            <input\n              type=\"range\"\n              value={alarmSoundVolume}\n              onChange={(e) => setAlarmSoundVolume(e.target.value)}\n              min=\"0\"\n              max=\"100\"\n            />\n          </label>\n          <label>\n            Volume do Som de Tic:\n            <input\n              type=\"range\"\n              value={tickingSoundVolume}\n              onChange={(e) => setTickingSoundVolume(e.target.value)}\n              min=\"0\"\n              max=\"100\"\n            />\n          </label>\n        </div>\n\n        <div className=\"setting-group\">\n          <h3>Tema</h3>\n          <label>\n            Modo Escuro:\n            <input\n              type=\"checkbox\"\n              checked={isDarkMode}\n              onChange={() => setIsDarkMode(!isDarkMode)}\n            />\n          </label>\n          <label>\n            Formato de Hora:\n            <select\n              value={hourFormat}\n              onChange={(e) => setHourFormat(e.target.value)}\n            >\n              <option value=\"24\">24 Horas</option>\n              <option value=\"12\">12 Horas</option>\n            </select>\n          </label>\n          <label>\n            Janela Pequena:\n            <input\n              type=\"checkbox\"\n              checked={isSmallWindow}\n              onChange={() => setIsSmallWindow(!isSmallWindow)}\n            />\n          </label>\n        </div>\n\n        <div className=\"setting-group\">\n          <h3>Notificações</h3>\n          <label>\n            Lembrete (minutos):\n            <input\n              type=\"number\"\n              value={notificationReminderTime}\n              onChange={(e) => setNotificationReminderTime(e.target.value)}\n              min={1}\n            />\n          </label>\n          <label>\n            Alarme no Celular:\n            <input\n              type=\"checkbox\"\n              checked={isMobileAlarm}\n              onChange={() => setIsMobileAlarm(!isMobileAlarm)}\n            />\n          </label>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}